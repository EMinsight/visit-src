#                         Copyright (c) 2000 - 2009
#                  Lawrence Livermore National Security, LLC
#            Produced at the Lawrence Livermore National Laboratory
#                              LLNL-CODE-400124
#                            All rights reserved.
#
# This file is  part of VisIt. For  details, see https://visit.llnl.gov/.  The
# full copyright notice is contained in the file COPYRIGHT located at the root
# of the VisIt distribution or at https://visit.llnl.gov/copyright.html.
#
# Redistribution  and  use  in  source  and  binary  forms,  with  or  without
# modification, are permitted provided  that the following conditions are met:
#
# - Redistributions of  source code  must retain  the above  copyright notice,
#   this list of conditions and the disclaimer below.
# - Redistributions in binary form must  reproduce the above copyright notice,
#   this  list of  conditions  and  the  disclaimer  (as noted below)  in  the
#   documentation and/or other materials provided with the distribution.
# - Neither the name of the LLNS/LLNL nor the names of its contributors may be
#   used to endorse  or promote products  derived from  this software  without
#   specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE  COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
# AND ANY EXPRESS OR  IMPLIED WARRANTIES,  INCLUDING, BUT NOT  LIMITED TO, THE
# IMPLIED WARRANTIES  OF MERCHANTABILITY AND FITNESS FOR  A PARTICULAR PURPOSE
# ARE  DISCLAIMED. IN  NO EVENT  SHALL LAWRENCE  LIVERMORE NATIONAL  SECURITY,
# LLC, THE  U.S.  DEPARTMENT OF  ENERGY  OR  CONTRIBUTORS BE  LIABLE  FOR  ANY
# DIRECT,  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL  DAMAGES
# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
# LOSS OF USE, DATA, OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER CAUSED AND
# ON ANY THEORY OF  LIABILITY, WHETHER IN CONTRACT, STRICT  LIABILITY, OR TORT
# (INCLUDING  NEGLIGENCE OR  OTHERWISE) ARISING IN ANY  WAY OUT OF  THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#
# Modifications:
#   Brad Whitlock, Tue Sep 30 13:41:00 PST 2003
#   I removed -lXext since it is not needed.
#
#   Jeremy Meredith, Wed Jul  7 12:12:52 PDT 2004
#   I changed _ser.o to simply be .o.
#
#   Brad Whitlock, Tue Nov 2 08:49:59 PDT 2004
#   I fixed the parallel target.
#
#   Jeremy Meredith, Tue Nov 23 14:53:07 PST 2004
#   Refactored the expression parser into two separate libraries.
#
#   Brad Whitlock, Fri Apr 29 11:59:25 PDT 2005
#   Ser/par changes.
#
#   Hank Childs, Thu Sep 22 09:01:31 PDT 2005
#   Add filters library, since expressions now depend on them.
#
#   Mark C. Miller, Mon Dec 12 20:53:03 PST 2005
#   Added ZLIB_LIB variable
#
#   Hank Childs, Sun Feb 19 13:08:29 PST 2006
#   Added libavtddf.
#
#   Mark C. Miller, Tue Sep  5 10:16:03 PDT 2006
#   Replaced '$(OBJ)' with '$(SEROBJ) $(PAROBJ) in clean target
#
#   Mark C. Miller, Sun Dec  3 12:20:11 PST 2006
#   Added VISIT_VTK_LDFLAGS and FILIB_LIBS to SERLIBS and PARLIBS
#
#   Eric Brugger, Thu Mar 22 10:28:57 PDT 2007
#   Added MESA_LIBS and GL_LIBS since they are no longer included in VTK_LIBS.
#
#   Dave Pugmire, Fri Oct 3 11:29:19 EDT 2008
#   Added avtIVP libs.
#
##############################################################################

##
## Programs and options...
##
@SET_MAKE@
@VARIABLES@
@MPI_CC@
@MPI_CXX@

CPPFLAGS=-I. -I../../include -I../../include/visit

# These libraries are needed for the Mac to link the regular visitconver_ser
# and visitconvert_par targets.
SERLIBS_FOR_MACOSX=-lavtmath_ser -lmir_ser
PARLIBS_FOR_MACOSX=-lavtmath_par -lmir_par

SERLIBS=-L../../lib -ldatabase_ser -lpipeline_ser -lexpressions_ser -lplotter_ser -lparallel_visit_vtk_ser -lavtfilters_ser -lavtview -lavtddf_ser -lexpr -lparser -lvisit_vtk -lrendering_visit_vtk -llightweight_visit_vtk -lutility -lmisc -lcomm -lstate -ldbatts -lavtmath_ser -lavtivp_ser -lavtexceptions -lmir_ser -lplugin @VTK_LIBS@ $(MESA_LIBS) $(GL_LIBS) $(X_LIBS) $(ZLIB_LIB) $(GLEW_LIBS) $(VISIT_VTK_LDFLAGS) @LIBS@ @PTHREAD_LIB@
PARLIBS=-L../../lib -ldatabase_par -lpipeline_par -lexpressions_par -lplotter_par -lparallel_visit_vtk_par -lavtfilters_par -lavtview -lavtddf_par -lexpr -lparser -lvisit_vtk -lrendering_visit_vtk -llightweight_visit_vtk -lutility -lmisc -lcomm -lstate -ldbatts -lavtmath_par -lavtivp_par -lavtexceptions -lmir_par -lplugin @VTK_LIBS@ $(MESA_LIBS) $(GL_LIBS) $(X_LIBS) $(ZLIB_LIB) $(GLEW_LIBS) $(VISIT_VTK_LDFLAGS) @LIBS@ @MPI_LIBS@ @PTHREAD_LIB@
LIBDEP=

##
## We don't want GL dependencies, so define a VTK lib variable
## with those removed and anything else from VTK we DON'T need.
##
MY_VTK_LIBS=`echo "@VTK_LIBS@" | tr ' ' '\n' | grep -v "vtkRendering\\\|vtkftgl\\\|vtkfreetype\\\|vtkHybrid\\\|vtksys"`

##
## Do some more magic to further reduce dependencies for dbio-only builds.
## In that case, @BUILD_DBIO_ONLY@ will be non-empty, the test for zero
## sized string will be false and the echos will NOT occur making all these
## strings empty.
##
SLIBLITE1=`test -z "@BUILD_DBIO_ONLY@" && echo '-lavtmath_ser'`
SLIBLITE2=`test -z "@BUILD_DBIO_ONLY@" && echo '-lmir_ser'`
PLIBLITE1=`test -z "@BUILD_DBIO_ONLY@" && echo '-lavtmath_par'`
PLIBLITE2=`test -z "@BUILD_DBIO_ONLY@" && echo '-lmir_par'`
SERLIBS_LITE=-L../../lib -ldatabase_ser -lpipeline_ser -lexpr -lparser -lvisit_vtk -llightweight_visit_vtk -lutility -lmisc -lcomm -lstate -ldbatts $(SLIBLITE1) -lavtexceptions $(SLIBLITE2) -lplugin $(MY_VTK_LIBS) $(ZLIB_LIB) $(VISIT_VTK_LDFLAGS) @LIBS@ @PTHREAD_LIB@
PARLIBS_LITE=-L../../lib -ldatabase_par -lpipeline_par -lexpr -lparser -lvisit_vtk -llightweight_visit_vtk -lutility -lmisc -lcomm -lstate -ldbatts $(SLIBLITE1) -lavtexceptions $(SLIBLITE2) -lplugin $(MY_VTK_LIBS) $(ZLIB_LIB) $(VISIT_VTK_LDFLAGS) @LIBS@ @MPI_LIBS@ @PTHREAD_LIB@

BUILD_DBIO_ONLY=$(tmpbin)/visitconvert_ser_lite

##
## Files...
##
SRC=convert.C
SEROBJ=$(SRC:.C=.o)
PAROBJ=$(SRC:.C=_par.o)
SEROBJ_LITE=convert_ser_lite.o
PAROBJ_LITE=convert_par_lite.o

##
## Standard targets...
##
all: $(LIB) @CONVERT_SER@ @CONVERT_PAR@ @BUILD_DBIO_ONLY@

clean:
	$(RM) $(SEROBJ) $(PAROBJ) @CONVERT_SER@ @CONVERT_PAR@
	$(RM) $(SEROBJ_LITE) $(PAROBJ_LITE) @CONVERT_SER@_lite @CONVERT_PAR@_lite

##
## Other targets...
##
$(SEROBJ_LITE): $(SRC)
	source='$<' object='$@' libtool=no        \
	depfile='./$*.d'  tmpdepfile='./$*.tmp_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp          \
	$(CXX) -DDISABLE_EXPRESSIONS $(CXXFLAGS) $(CPPFLAGS) -c $< -o $@
@OS_RULE@

$(PAROBJ_LITE): $(SRC)
	source='$<' object='$@' libtool=no                \
	depfile='./$*_par.d'  tmpdepfile='./$*.tmp_par_d' \
	$(DEPMODE) $(TOPDIR)/bin/depcomp                  \
	$(CXX) -DDISABLE_EXPRESSIONS $(CXXFLAGS) $(CPPFLAGS) @PARALLEL_CPPFLAGS@ -c $< -o $@
@OS_RULE@

@CONVERT_SER@ or_no_ser: $(LIBDEP) $(SEROBJ) @CONVERT_SER_LITE@
	$(CXX) -o $@ $(SEROBJ) $(LDFLAGS) $(SERLIBS) $(SERLIBS_FOR_MACOSX)

@CONVERT_PAR@ or_no_par: $(LIBDEP) $(PAROBJ) @CONVERT_PAR_LITE@
	$(CXX) -o $@ $(PAROBJ) $(LDFLAGS) $(PARLIBS) $(PARLIBS_FOR_MACOSX) @MPI_LIBS@

##
## Having this target explicitly instead of derived from @CONVERT_SER@
## allows it to work for both 'normal' build and a dbio-only build.
##
$(tmpbin)/visitconvert_ser_lite: $(LIBDEP) $(SEROBJ_LITE) 
	$(CXX) -o $@ $(SEROBJ_LITE) $(LDFLAGS) $(SERLIBS_LITE)

@CONVERT_PAR@_lite: $(LIBDEP) $(PAROBJ_LITE) 
	$(CXX) -o $@ $(PAROBJ_LITE) $(LDFLAGS) $(PARLIBS_LITE) @MPI_LIBS@

##
## Automatic dependency stuff
##
@TARGETS@
